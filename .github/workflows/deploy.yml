name: mini-cal

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    steps:
      - name: checkout
      - uses: actions/checkout@v3

      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mini-cal:${{ github.sha }}

      # - name: executing remote ssh commands
      #   uses: appleboy/ssh-action@v1.2.1
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       set -e  # Exit immediately if any command fails

      #       export NVM_DIR="$HOME/.nvm"
      #       if [ ! -d "$NVM_DIR" ]; then
      #         curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
      #       fi

      #       # Load NVM into the current shell session
      #       export NVM_DIR="$HOME/.nvm"
      #       [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      #       [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

      #       echo "Installing and using Node.js v22.15.0..."
      #       #nvm install node
      #       nvm install 22.13.1
      #       nvm use 22.13.1

      #       echo "Installing PM2..."
      #       if ! command -v pm2 &> /dev/null; then
      #       npm install -g pm2
      #       fi
      #       npm i -g pm2

      #       git config --global url.https://${{ secrets.MY_PAT }}@github.com/.insteadOf https://github.com/
      #       cd social-media-manager

      #       echo "Loading env variables..."
      #       # Overwrite .env file with the latest secrets
      #       cat <<EOL > .env
      #       NEXTAUTH_URL="https://staging.appsha.com/"
      #       NEXT_PUBLIC_BASE_URL="https://staging.appsha.com/"
      #       NODE_ENV="production"
      #       DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}
      #       AUTH_SECRET=${{ secrets.AUTH_SECRET }}
      #       JWT_SECRET=${{ secrets.JWT_SECRET }}
      #       AWS_S3_ACCESS_KEY=${{ secrets.AWS_S3_ACCESS_KEY }}
      #       AWS_S3_SECRET_KEY=${{ secrets.AWS_S3_SECRET_KEY }}
      #       AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
      #       AWS_S3_BUCKET_REGION=${{ secrets.AWS_S3_BUCKET_REGION }}
      #       MAIL_USER=${{ secrets.MAIL_USER }}
      #       MAIL_PASS=${{ secrets.MAIL_PASS }}
      #       STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
      #       NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      #       STRIPE_WEBHOOK_SECRET=${{ secrets.STAGING_STRIPE_WEBHOOK_SECRET }}
      #       EOL

      #       git pull origin main
      #       npm install
      #       # npm run prisma:migration
      #       # npm run prisma:deploy
      #       npm run prisma:generate
      #       # npm run db:seed
      #       rm -rf .next
      #       npm run build
      #       pm2 kill
      #       pm2 start npm --name "social-media-manager" -- start
      #       pm2 restart social-media-manager
      #   env:
      #     STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      #     DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
